/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.hola.myrpc.dubbo.api.dthrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-04-05")
public class MoviePersonStatDataVo implements org.apache.thrift.TBase<MoviePersonStatDataVo, MoviePersonStatDataVo._Fields>, java.io.Serializable, Cloneable, Comparable<MoviePersonStatDataVo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MoviePersonStatDataVo");

  private static final org.apache.thrift.protocol.TField GAIN_AWARD_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("gainAwardNum", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NOMINATION_AWARD_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("nominationAwardNum", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField JOIN_MOVIE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("joinMovieNum", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField IMAGE_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("imageNum", org.apache.thrift.protocol.TType.I32, (short)4);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new MoviePersonStatDataVoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new MoviePersonStatDataVoTupleSchemeFactory();

  public int gainAwardNum; // optional
  public int nominationAwardNum; // optional
  public int joinMovieNum; // optional
  public int imageNum; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GAIN_AWARD_NUM((short)1, "gainAwardNum"),
    NOMINATION_AWARD_NUM((short)2, "nominationAwardNum"),
    JOIN_MOVIE_NUM((short)3, "joinMovieNum"),
    IMAGE_NUM((short)4, "imageNum");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GAIN_AWARD_NUM
          return GAIN_AWARD_NUM;
        case 2: // NOMINATION_AWARD_NUM
          return NOMINATION_AWARD_NUM;
        case 3: // JOIN_MOVIE_NUM
          return JOIN_MOVIE_NUM;
        case 4: // IMAGE_NUM
          return IMAGE_NUM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __GAINAWARDNUM_ISSET_ID = 0;
  private static final int __NOMINATIONAWARDNUM_ISSET_ID = 1;
  private static final int __JOINMOVIENUM_ISSET_ID = 2;
  private static final int __IMAGENUM_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.GAIN_AWARD_NUM, _Fields.NOMINATION_AWARD_NUM, _Fields.JOIN_MOVIE_NUM, _Fields.IMAGE_NUM};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GAIN_AWARD_NUM, new org.apache.thrift.meta_data.FieldMetaData("gainAwardNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NOMINATION_AWARD_NUM, new org.apache.thrift.meta_data.FieldMetaData("nominationAwardNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JOIN_MOVIE_NUM, new org.apache.thrift.meta_data.FieldMetaData("joinMovieNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IMAGE_NUM, new org.apache.thrift.meta_data.FieldMetaData("imageNum", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MoviePersonStatDataVo.class, metaDataMap);
  }

  public MoviePersonStatDataVo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MoviePersonStatDataVo(MoviePersonStatDataVo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.gainAwardNum = other.gainAwardNum;
    this.nominationAwardNum = other.nominationAwardNum;
    this.joinMovieNum = other.joinMovieNum;
    this.imageNum = other.imageNum;
  }

  public MoviePersonStatDataVo deepCopy() {
    return new MoviePersonStatDataVo(this);
  }

  @Override
  public void clear() {
    setGainAwardNumIsSet(false);
    this.gainAwardNum = 0;
    setNominationAwardNumIsSet(false);
    this.nominationAwardNum = 0;
    setJoinMovieNumIsSet(false);
    this.joinMovieNum = 0;
    setImageNumIsSet(false);
    this.imageNum = 0;
  }

  public int getGainAwardNum() {
    return this.gainAwardNum;
  }

  public MoviePersonStatDataVo setGainAwardNum(int gainAwardNum) {
    this.gainAwardNum = gainAwardNum;
    setGainAwardNumIsSet(true);
    return this;
  }

  public void unsetGainAwardNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GAINAWARDNUM_ISSET_ID);
  }

  /** Returns true if field gainAwardNum is set (has been assigned a value) and false otherwise */
  public boolean isSetGainAwardNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GAINAWARDNUM_ISSET_ID);
  }

  public void setGainAwardNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GAINAWARDNUM_ISSET_ID, value);
  }

  public int getNominationAwardNum() {
    return this.nominationAwardNum;
  }

  public MoviePersonStatDataVo setNominationAwardNum(int nominationAwardNum) {
    this.nominationAwardNum = nominationAwardNum;
    setNominationAwardNumIsSet(true);
    return this;
  }

  public void unsetNominationAwardNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NOMINATIONAWARDNUM_ISSET_ID);
  }

  /** Returns true if field nominationAwardNum is set (has been assigned a value) and false otherwise */
  public boolean isSetNominationAwardNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NOMINATIONAWARDNUM_ISSET_ID);
  }

  public void setNominationAwardNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NOMINATIONAWARDNUM_ISSET_ID, value);
  }

  public int getJoinMovieNum() {
    return this.joinMovieNum;
  }

  public MoviePersonStatDataVo setJoinMovieNum(int joinMovieNum) {
    this.joinMovieNum = joinMovieNum;
    setJoinMovieNumIsSet(true);
    return this;
  }

  public void unsetJoinMovieNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JOINMOVIENUM_ISSET_ID);
  }

  /** Returns true if field joinMovieNum is set (has been assigned a value) and false otherwise */
  public boolean isSetJoinMovieNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JOINMOVIENUM_ISSET_ID);
  }

  public void setJoinMovieNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JOINMOVIENUM_ISSET_ID, value);
  }

  public int getImageNum() {
    return this.imageNum;
  }

  public MoviePersonStatDataVo setImageNum(int imageNum) {
    this.imageNum = imageNum;
    setImageNumIsSet(true);
    return this;
  }

  public void unsetImageNum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IMAGENUM_ISSET_ID);
  }

  /** Returns true if field imageNum is set (has been assigned a value) and false otherwise */
  public boolean isSetImageNum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IMAGENUM_ISSET_ID);
  }

  public void setImageNumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IMAGENUM_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case GAIN_AWARD_NUM:
      if (value == null) {
        unsetGainAwardNum();
      } else {
        setGainAwardNum((Integer)value);
      }
      break;

    case NOMINATION_AWARD_NUM:
      if (value == null) {
        unsetNominationAwardNum();
      } else {
        setNominationAwardNum((Integer)value);
      }
      break;

    case JOIN_MOVIE_NUM:
      if (value == null) {
        unsetJoinMovieNum();
      } else {
        setJoinMovieNum((Integer)value);
      }
      break;

    case IMAGE_NUM:
      if (value == null) {
        unsetImageNum();
      } else {
        setImageNum((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case GAIN_AWARD_NUM:
      return getGainAwardNum();

    case NOMINATION_AWARD_NUM:
      return getNominationAwardNum();

    case JOIN_MOVIE_NUM:
      return getJoinMovieNum();

    case IMAGE_NUM:
      return getImageNum();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case GAIN_AWARD_NUM:
      return isSetGainAwardNum();
    case NOMINATION_AWARD_NUM:
      return isSetNominationAwardNum();
    case JOIN_MOVIE_NUM:
      return isSetJoinMovieNum();
    case IMAGE_NUM:
      return isSetImageNum();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MoviePersonStatDataVo)
      return this.equals((MoviePersonStatDataVo)that);
    return false;
  }

  public boolean equals(MoviePersonStatDataVo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_gainAwardNum = true && this.isSetGainAwardNum();
    boolean that_present_gainAwardNum = true && that.isSetGainAwardNum();
    if (this_present_gainAwardNum || that_present_gainAwardNum) {
      if (!(this_present_gainAwardNum && that_present_gainAwardNum))
        return false;
      if (this.gainAwardNum != that.gainAwardNum)
        return false;
    }

    boolean this_present_nominationAwardNum = true && this.isSetNominationAwardNum();
    boolean that_present_nominationAwardNum = true && that.isSetNominationAwardNum();
    if (this_present_nominationAwardNum || that_present_nominationAwardNum) {
      if (!(this_present_nominationAwardNum && that_present_nominationAwardNum))
        return false;
      if (this.nominationAwardNum != that.nominationAwardNum)
        return false;
    }

    boolean this_present_joinMovieNum = true && this.isSetJoinMovieNum();
    boolean that_present_joinMovieNum = true && that.isSetJoinMovieNum();
    if (this_present_joinMovieNum || that_present_joinMovieNum) {
      if (!(this_present_joinMovieNum && that_present_joinMovieNum))
        return false;
      if (this.joinMovieNum != that.joinMovieNum)
        return false;
    }

    boolean this_present_imageNum = true && this.isSetImageNum();
    boolean that_present_imageNum = true && that.isSetImageNum();
    if (this_present_imageNum || that_present_imageNum) {
      if (!(this_present_imageNum && that_present_imageNum))
        return false;
      if (this.imageNum != that.imageNum)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGainAwardNum()) ? 131071 : 524287);
    if (isSetGainAwardNum())
      hashCode = hashCode * 8191 + gainAwardNum;

    hashCode = hashCode * 8191 + ((isSetNominationAwardNum()) ? 131071 : 524287);
    if (isSetNominationAwardNum())
      hashCode = hashCode * 8191 + nominationAwardNum;

    hashCode = hashCode * 8191 + ((isSetJoinMovieNum()) ? 131071 : 524287);
    if (isSetJoinMovieNum())
      hashCode = hashCode * 8191 + joinMovieNum;

    hashCode = hashCode * 8191 + ((isSetImageNum()) ? 131071 : 524287);
    if (isSetImageNum())
      hashCode = hashCode * 8191 + imageNum;

    return hashCode;
  }

  @Override
  public int compareTo(MoviePersonStatDataVo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetGainAwardNum()).compareTo(other.isSetGainAwardNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGainAwardNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gainAwardNum, other.gainAwardNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNominationAwardNum()).compareTo(other.isSetNominationAwardNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNominationAwardNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nominationAwardNum, other.nominationAwardNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJoinMovieNum()).compareTo(other.isSetJoinMovieNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJoinMovieNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.joinMovieNum, other.joinMovieNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImageNum()).compareTo(other.isSetImageNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImageNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.imageNum, other.imageNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MoviePersonStatDataVo(");
    boolean first = true;

    if (isSetGainAwardNum()) {
      sb.append("gainAwardNum:");
      sb.append(this.gainAwardNum);
      first = false;
    }
    if (isSetNominationAwardNum()) {
      if (!first) sb.append(", ");
      sb.append("nominationAwardNum:");
      sb.append(this.nominationAwardNum);
      first = false;
    }
    if (isSetJoinMovieNum()) {
      if (!first) sb.append(", ");
      sb.append("joinMovieNum:");
      sb.append(this.joinMovieNum);
      first = false;
    }
    if (isSetImageNum()) {
      if (!first) sb.append(", ");
      sb.append("imageNum:");
      sb.append(this.imageNum);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MoviePersonStatDataVoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MoviePersonStatDataVoStandardScheme getScheme() {
      return new MoviePersonStatDataVoStandardScheme();
    }
  }

  private static class MoviePersonStatDataVoStandardScheme extends org.apache.thrift.scheme.StandardScheme<MoviePersonStatDataVo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MoviePersonStatDataVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GAIN_AWARD_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.gainAwardNum = iprot.readI32();
              struct.setGainAwardNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NOMINATION_AWARD_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nominationAwardNum = iprot.readI32();
              struct.setNominationAwardNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // JOIN_MOVIE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.joinMovieNum = iprot.readI32();
              struct.setJoinMovieNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IMAGE_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.imageNum = iprot.readI32();
              struct.setImageNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MoviePersonStatDataVo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetGainAwardNum()) {
        oprot.writeFieldBegin(GAIN_AWARD_NUM_FIELD_DESC);
        oprot.writeI32(struct.gainAwardNum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNominationAwardNum()) {
        oprot.writeFieldBegin(NOMINATION_AWARD_NUM_FIELD_DESC);
        oprot.writeI32(struct.nominationAwardNum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetJoinMovieNum()) {
        oprot.writeFieldBegin(JOIN_MOVIE_NUM_FIELD_DESC);
        oprot.writeI32(struct.joinMovieNum);
        oprot.writeFieldEnd();
      }
      if (struct.isSetImageNum()) {
        oprot.writeFieldBegin(IMAGE_NUM_FIELD_DESC);
        oprot.writeI32(struct.imageNum);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MoviePersonStatDataVoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public MoviePersonStatDataVoTupleScheme getScheme() {
      return new MoviePersonStatDataVoTupleScheme();
    }
  }

  private static class MoviePersonStatDataVoTupleScheme extends org.apache.thrift.scheme.TupleScheme<MoviePersonStatDataVo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MoviePersonStatDataVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetGainAwardNum()) {
        optionals.set(0);
      }
      if (struct.isSetNominationAwardNum()) {
        optionals.set(1);
      }
      if (struct.isSetJoinMovieNum()) {
        optionals.set(2);
      }
      if (struct.isSetImageNum()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetGainAwardNum()) {
        oprot.writeI32(struct.gainAwardNum);
      }
      if (struct.isSetNominationAwardNum()) {
        oprot.writeI32(struct.nominationAwardNum);
      }
      if (struct.isSetJoinMovieNum()) {
        oprot.writeI32(struct.joinMovieNum);
      }
      if (struct.isSetImageNum()) {
        oprot.writeI32(struct.imageNum);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MoviePersonStatDataVo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.gainAwardNum = iprot.readI32();
        struct.setGainAwardNumIsSet(true);
      }
      if (incoming.get(1)) {
        struct.nominationAwardNum = iprot.readI32();
        struct.setNominationAwardNumIsSet(true);
      }
      if (incoming.get(2)) {
        struct.joinMovieNum = iprot.readI32();
        struct.setJoinMovieNumIsSet(true);
      }
      if (incoming.get(3)) {
        struct.imageNum = iprot.readI32();
        struct.setImageNumIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

